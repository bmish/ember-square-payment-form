import Component from '@ember/component';
import { computed } from '@ember/object';

/**
 * Renders a Materpass button for use in the Square Payment Form, pre-styled to meet
 * Masterpass branding guidelines.
 *
 * It includes the ability to change the theme of the button and localize the button copy.
 *
 * **This component will only render when a customer can use Masterpass.**
 *
 * If you need to adjust your content based on whether the Payment Form can accept Masterpass or not,
 * you can use the `PaymentForm.canShowMasterpass` property in your template, like so:
 *
 * ```hbs
 * {{#square-payment-form as |PaymentForm|}}
 *   {{PaymentForm.MasterpassButton}}
 *
 *   {{#unless PaymentForm.canShowMasterpass}}
 *     <p>Masterpass is not available here.</p>
 *   {{/unless}}
 * {{/square-payment-form}}
 * ```
 *
 * *Note: you'll need to configure the SquarePaymentForm to implement Masterpass;*
 * *you can read more in the digital wallets guide.*
 *
 * @class SquarePaymentFormMasterpassButton
 */
export default Component.extend({
  attributeBindings: [
    'uniqueMasterpassId:id',
    'label:aria-label'
  ],
  classNameBindings: [
    'isSupported::square-payment-form-element--hidden'
  ],
  classNames: [
    'square-payment-form__masterpass-button'
  ],

  // ADDON INTERNALS

  /**
   * Adds an ARIA label to describe the button since there's no text for a screenreader to use.
   * @private
   */
  label: 'Pay with Masterpass',

  /**
   * Generates a BEM-compliant CSS class to hide Masterpass when it's not supported.
   * @private
   */
  isSupported: false,

  /**
   * ID generated by the parent Payment Form component used to generate a reference to an
   * instance of this button.
   * @private
   */
  formId: null,

  /**
   * Generated HTML ID referenced by the parent Payment Form component to reference an
   * instance of this button.
   * @private
   */
  uniqueMasterpassId: computed('formId', function() {
    return `sq-${this.formId}-masterpass-button`;
  })
});
