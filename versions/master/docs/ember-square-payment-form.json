{"jsonapi":{"version":"1.0"},"data":{"type":"project","id":"ember-square-payment-form","attributes":{"name":"ember-square-payment-form","version":"0.1.0","navigationIndex":[{"type":"components","items":[{"id":"ember-square-payment-form/components/square-payment-form-apple-pay-button","path":"components/square-payment-form-apple-pay-button","name":"{{square-payment-form-apple-pay-button}}"},{"id":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input","path":"components/square-payment-form-credit-card-cvv-input","name":"{{square-payment-form-credit-card-cvv-input}}"},{"id":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input","path":"components/square-payment-form-credit-card-expiration-date-input","name":"{{square-payment-form-credit-card-expiration-date-input}}"},{"id":"ember-square-payment-form/components/square-payment-form-credit-card-fields","path":"components/square-payment-form-credit-card-fields","name":"{{square-payment-form-credit-card-fields}}"},{"id":"ember-square-payment-form/components/square-payment-form-credit-card-number-input","path":"components/square-payment-form-credit-card-number-input","name":"{{square-payment-form-credit-card-number-input}}"},{"id":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input","path":"components/square-payment-form-credit-card-postal-code-input","name":"{{square-payment-form-credit-card-postal-code-input}}"},{"id":"ember-square-payment-form/components/square-payment-form-google-pay-button","path":"components/square-payment-form-google-pay-button","name":"{{square-payment-form-google-pay-button}}"},{"id":"ember-square-payment-form/components/square-payment-form-masterpass-button","path":"components/square-payment-form-masterpass-button","name":"{{square-payment-form-masterpass-button}}"},{"id":"ember-square-payment-form/components/square-payment-form-styled","path":"components/square-payment-form-styled","name":"{{square-payment-form-styled}}"},{"id":"ember-square-payment-form/components/square-payment-form","path":"components/square-payment-form","name":"{{square-payment-form}}"}]}]},"relationships":{"modules":{"data":[{"type":"module","id":"ember-square-payment-form/components/square-payment-form"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-apple-pay-button"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-fields"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-number-input"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-google-pay-button"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-masterpass-button"},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-styled"}]}}},"included":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form~SquarePaymentForm","attributes":{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":100,"description":"<div class=\"docs-md\"><p>Creates a Square Payment Form and yields form inputs to use inside of it.</p>\n<p>This component requires 3 arguments for basic use:</p>\n<ul>\n<li><strong>applicationId:</strong> This can be found in your <a href=\"https://connect.squareup.com/apps\"  class=\"docs-md__a\">Square Developer Dashboard</a>\nfor the current Square app you&#39;re developing</li>\n<li><strong>locationId:</strong> You can retrieve this from the <a href=\"https://docs.connect.squareupstaging.com/api/connect/v2#navsection-locations\"  class=\"docs-md__a\">Square Connect v2 Locations API</a>;\nor your <a href=\"https://connect.squareup.com/apps\"  class=\"docs-md__a\">Square Developer Dashboard</a>. It determines which Square location\nwill receive credit for transactions made with this form.</li>\n<li><strong>onCardNonceResponseReceived:</strong> This callback gives you a nonce to pass to your back-end server to make\na &quot;charge&quot; request to Square.</li>\n</ul>\n<p>..and one additional argument for digital wallets:</p>\n<ul>\n<li><strong>createPaymentRequest:</strong> This callback returns data to show information about the payment in the\nApple Pay, Google Pay, and Masterpass interfaces.</li>\n</ul>\n<p>This is a basic usage of the form, without digital wallets:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span>\n  @<span class=\"hljs-attr\">applicationId</span>=<span class=\"hljs-string\">\"square-app-id\"</span>\n  @<span class=\"hljs-attr\">locationId</span>=<span class=\"hljs-string\">\"square-location-id\"</span>\n  @<span class=\"hljs-attr\">onCardNonceResponseReceived</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"handleCardNonceRespone\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n  <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|\n&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Card Number<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.NumberInput</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Expiration<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.ExpirationDateInput</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>CVV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.CvvInput</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Postal<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.PostalCodeInput</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>&gt;\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span>\n  applicationId=<span class=\"hljs-string\">\"square-app-id\"</span>\n  locationId=<span class=\"hljs-string\">\"square-location-id\"</span>\n  onCardNonceResponseReceived=(action <span class=\"hljs-string\">\"handleCardNonceRespone\"</span>)\n  as |PaymentForm|\n}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Card Number<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.NumberInput}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Expiration<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.ExpirationDateInput}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>CVV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.CvvInput}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Postal<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.PostalCodeInput}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p>You can see the other docs pages in the project for examples using digital wallets (Apple Pay, Google May, Masterpass).</p></div>","access":"public","tags":[{"name":"class","value":"SquarePaymentForm"}],"decorators":[{"name":"layout"}],"exportType":"default","name":"SquarePaymentForm","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":106,"description":"<div class=\"docs-md\"><p><strong>Required</strong>: ID of your Square application, found in the <a href=\"https://connect.squareup.com/apps\"  class=\"docs-md__a\">Square Developer Dashboard</a>.</p></div>","access":"public","tags":[],"name":"applicationId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":559,"description":"<div class=\"docs-md\"><p>Used to determine if Apple Pay is supported in the current environment.</p></div>","access":"private","tags":[],"name":"canShowApplePay","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":565,"description":"<div class=\"docs-md\"><p>Used to determine if Apple Pay is supported in the current environment.</p></div>","access":"private","tags":[],"name":"canShowGooglePay","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":571,"description":"<div class=\"docs-md\"><p>Used to determine if Apple Pay is supported in the current environment.</p></div>","access":"private","tags":[],"name":"canShowMasterpass","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":365,"description":"<div class=\"docs-md\"><p><strong>Required for Digital Wallets</strong>: callback that gets fired when a digital wallet button is pressed.\nThis callback returns data to show information about the payment in the Apple Pay, Google Pay,\nand Masterpass interfaces.</p>\n<p>This method <strong>must</strong> return a <code>PaymentRequest</code> object.</p>\n<p><strong>Example</strong>: Sample function to create a payment request.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">requestShippingAddress</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">requestBillingInfo</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">shippingContact</span>: {\n      <span class=\"hljs-attr\">familyName</span>: <span class=\"hljs-string\">\"CUSTOMER LAST NAME\"</span>,\n      <span class=\"hljs-attr\">givenName</span>: <span class=\"hljs-string\">\"CUSTOMER FIRST NAME\"</span>,\n      <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">\"mycustomer@example.com\"</span>,\n      <span class=\"hljs-attr\">country</span>: <span class=\"hljs-string\">\"USA\"</span>,\n      <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">\"CA\"</span>,\n      <span class=\"hljs-attr\">city</span>: <span class=\"hljs-string\">\"San Francisco\"</span>,\n      <span class=\"hljs-attr\">addressLines</span>: [\n        <span class=\"hljs-string\">\"1455 Market St #600\"</span>\n      ],\n      <span class=\"hljs-attr\">postalCode</span>: <span class=\"hljs-string\">\"94103\"</span>\n    },\n    <span class=\"hljs-attr\">currencyCode</span>: <span class=\"hljs-string\">\"USD\"</span>,\n    <span class=\"hljs-attr\">countryCode</span>: <span class=\"hljs-string\">\"US\"</span>,\n    <span class=\"hljs-attr\">total</span>: {\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"MERCHANT NAME\"</span>,\n      <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"TOTAL AMOUNT\"</span>,\n      <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">lineItems</span>: [\n      {\n        <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Subtotal\"</span>,\n        <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"SUBTOTAL AMOUNT\"</span>,\n        <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n      },\n      {\n        <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Shipping\"</span>,\n        <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"SHIPPING AMOUNT\"</span>,\n        <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Tax\"</span>,\n        <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"TAX AMOUNT\"</span>,\n        <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n      }\n    ]\n  }\n}</code></pre>\n<p><strong>Payment Request Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>requestShippingAddress</code></td>\n<td>boolean</td>\n<td>Lets customers select a shipping address in the digital wallet UI.</td>\n</tr>\n<tr>\n<td><code>requestBillingInfo</code></td>\n<td>boolean</td>\n<td>Lets customers select a billing address in the digital wallet UI.</td>\n</tr>\n<tr>\n<td><code>shippingContact</code></td>\n<td>Contact</td>\n<td>Optional. Default shipping information to display in the digital wallet UI.</td>\n</tr>\n<tr>\n<td><code>countryCode</code></td>\n<td>string</td>\n<td>2-letter ISO 3166-1 alpha-2 country code</td>\n</tr>\n<tr>\n<td><code>currencyCode</code></td>\n<td>string</td>\n<td>3-letter ISO 4217 currency code</td>\n</tr>\n<tr>\n<td><code>lineItems</code></td>\n<td>LineItem[]</td>\n<td>List of items included in the transaction. Typically displayed in digital wallet UI.</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>LineItem</td>\n<td>Merchant name, status, and total cost of the transaction. Typically displayed in digital wallet UI.</td>\n</tr>\n</tbody></table>\n<p><strong>Contact Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>familyName</code></td>\n<td>string</td>\n<td>Last name of the contact</td>\n</tr>\n<tr>\n<td><code>givenName</code></td>\n<td>string</td>\n<td>First name of the contact</td>\n</tr>\n<tr>\n<td><code>email</code></td>\n<td>string</td>\n<td>Email address of the contact</td>\n</tr>\n<tr>\n<td><code>country</code></td>\n<td>string</td>\n<td>A 2-letter string containing the ISO 3166-1 country code of the contact address</td>\n</tr>\n<tr>\n<td><code>countryName</code></td>\n<td>string</td>\n<td>The full country name of the contact. Read only.</td>\n</tr>\n<tr>\n<td><code>region</code></td>\n<td>string</td>\n<td>The applicable administrative region (e.g., province, state) of the contact address</td>\n</tr>\n<tr>\n<td><code>city</code></td>\n<td>string</td>\n<td>The city name of the contact address</td>\n</tr>\n<tr>\n<td><code>addressLines</code></td>\n<td>string[]</td>\n<td>The street address lines of the contact address</td>\n</tr>\n<tr>\n<td><code>postalCode</code></td>\n<td>string</td>\n<td>The postal code of the contact address</td>\n</tr>\n<tr>\n<td><code>phone</code></td>\n<td>string</td>\n<td>The telephone number of the contact</td>\n</tr>\n</tbody></table>\n<p><strong>Line Item Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>label</td>\n<td>string</td>\n<td>Human-readable string that explains the purpose of the amount. For a line item, this is typically the name of the charge or object purchased. For the total field, this is typically the merchant name.</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>string</td>\n<td>The cost of the object as a string representation of a float with 2 decimal places. (e.g., &quot;15.00&quot;). For a line item, this is typically the cost of the object, a subtotal, or additional charge (e.g., taxes, shipping). For the total field, this is the total charge of the transaction and should equal the sum of the line item amounts.</td>\n</tr>\n<tr>\n<td>pending</td>\n<td>boolean</td>\n<td>Optional. A boolean indicating whether or not the value in the amount field represents an estimated or unknown cost. Typically, this field is false.</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"createPaymentRequest","type":"undefined | function","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":587,"description":"<div class=\"docs-md\"><p>Internal field that maintains the randomly generated form ID for inputs\nassociated with an instance of the payment form.</p></div>","access":"private","tags":[],"name":"formId","type":"undefined | string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":120,"description":"<div class=\"docs-md\"><p>Class to add to all Payment Form input wrappers; default is &quot;sq-input&quot;</p></div>","access":"public","tags":[],"name":"inputClass","type":"string","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":158,"description":"<div class=\"docs-md\"><p>An array CSS styles formatted as JS objects, where the styles at the\nend of the array take precedence over the styles at the beginning.</p>\n<p>These styles are passed in at the form level because Square has to insert\nthem into the secure iframes that become form inputs, and normal CSS styling\ncan&#39;t apply.</p>\n<p>The following example value shows the set of properties you can use on each style object:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\">[\n {\n   <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-string\">'transparent'</span>, <span class=\"hljs-comment\">// input background-color</span>\n   boxShadow: <span class=\"hljs-string\">'0px 0px rgba(0, 0, 0, 0.2)'</span>, <span class=\"hljs-comment\">// input box-shadow</span>\n   color: <span class=\"hljs-string\">'#373F4A'</span>, <span class=\"hljs-comment\">// input color</span>\n   fontFamily: <span class=\"hljs-string\">'Helvetica'</span>, <span class=\"hljs-comment\">// input font-family</span>\n   fontSize: <span class=\"hljs-string\">'24px'</span>, <span class=\"hljs-comment\">// input font-size</span>\n   fontWeight: <span class=\"hljs-string\">'400'</span>, <span class=\"hljs-comment\">// input font-weight</span>\n   lineHeight: <span class=\"hljs-string\">'32px'</span>, <span class=\"hljs-comment\">// input line-height</span>\n   padding: <span class=\"hljs-string\">'8px'</span>, <span class=\"hljs-comment\">// input padding</span>\n\n   placeholderColor: <span class=\"hljs-string\">'#777'</span>, <span class=\"hljs-comment\">// placeholder color</span>\n   placeholderFontWeight: <span class=\"hljs-string\">'400'</span>, <span class=\"hljs-comment\">// placeholder font-weight</span>\n\n   <span class=\"hljs-comment\">// The following properties act as a CSS media query, allowing you to set</span>\n   <span class=\"hljs-comment\">// breakpoints based on the width of the viewport.</span>\n   mediaMaxWidth: <span class=\"hljs-string\">'0px'</span> <span class=\"hljs-comment\">// max. viewport width for styles to apply (default: infinite)</span>\n   mediaMinWidth: <span class=\"hljs-string\">'0px'</span> <span class=\"hljs-comment\">// min. viewport width for styles to apply (default: 0px)</span>\n }\n]</code></pre>\n<p>You can also view the set of permitted styles on\n<a href=\"https://docs.connect.squareup.com/api/paymentform#datatype-inputstyleobjects\"  class=\"docs-md__a\">Square&#39;s technical reference</a>.</p></div>","access":"public","tags":[],"name":"inputStyles","type":"object[]","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":113,"description":"<div class=\"docs-md\"><p><strong>Required</strong>: ID of the Square location transactions made with this form should be\nattributed to; you can find this in the locations tab of your app on the\n<a href=\"https://connect.squareup.com/apps\"  class=\"docs-md__a\">Square Developer Dashboard</a>.</p></div>","access":"public","tags":[],"name":"locationId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":594,"description":"<div class=\"docs-md\"><p>Internal field that maintains the ID of the last used application and makes\nsure that the form is rebuilt if it changes.</p></div>","access":"private","tags":[],"name":"oldApplicationId","type":"undefined | string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":601,"description":"<div class=\"docs-md\"><p>Internal field that maintains the ID of the last used location and makes\nsure that the form is rebuilt if it changes.</p></div>","access":"private","tags":[],"name":"oldLocationId","type":"undefined | string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":273,"description":"<div class=\"docs-md\"><p><strong>Required</strong>: callback that gets fired when a nonce is received from the SqPaymentForm JS library.\nYou can then pass this nonce to a your back-end server to make a &quot;charge&quot; request to Square.</p>\n<p><strong>Example</strong>: Sample function to send the nonce to your server.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\">(errors, nonce, cardData, billingContact, shippingContact, shippingOption) =&gt; {\n  <span class=\"hljs-keyword\">if</span> (errors &amp;&amp; errors.length &gt; <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span> alert(<span class=\"hljs-string\">'Error while processing credit card.'</span>);\n  }\n\n  <span class=\"hljs-comment\">// Send nonce to your server</span>\n  fetch(<span class=\"hljs-string\">'https://example.com/charge'</span>, {\n    <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ nonce }),\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>\n  });\n}</code></pre>\n<p><strong>Method Signature</strong></p>\n<p>Example:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">errors, nonce, cardData, billingContact, shippingContact, shippingOption</span>) </span>{\n  <span class=\"hljs-comment\">// Handle callback</span>\n}</code></pre>\n<p>Schema:</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>errors</code></td>\n<td>Error[]</td>\n<td>An array of errors. Empty if nonce request succeeded.</td>\n</tr>\n<tr>\n<td><code>nonce</code></td>\n<td>string</td>\n<td>Nonce to send to back-end server to make charge request</td>\n</tr>\n<tr>\n<td><code>cardData</code></td>\n<td>CardData</td>\n<td>Basic credit card data, such as brand, last 4 digits, etc.</td>\n</tr>\n<tr>\n<td><code>billingContact</code></td>\n<td>Contact</td>\n<td>Digital wallets only. Billing address / info for customer</td>\n</tr>\n<tr>\n<td><code>shippingContact</code></td>\n<td>Contact</td>\n<td>Digital wallets only. Shipping address / info for customer</td>\n</tr>\n<tr>\n<td><code>shippingOption</code></td>\n<td>ShippingOption</td>\n<td>Apple Pay only. Shipping option selected by customer</td>\n</tr>\n</tbody></table>\n<p><strong>Error Object</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>field</code></td>\n<td>string</td>\n<td>An array of errors. Empty if nonce request succeeded.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>string</td>\n<td>Nonce to send to back-end server to make charge request</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>string</td>\n<td>Basic credit card data, such as brand, last 4 digits, etc.</td>\n</tr>\n</tbody></table>\n<p><strong>Error Types</strong></p>\n<table>\n<thead>\n<tr>\n<th>Error Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>INVALID_APPLICATION_ID</code></td>\n<td>The application ID provided when initializing the payment form is invalid</td>\n</tr>\n<tr>\n<td><code>MISSING_APPLICATION_ID</code></td>\n<td>An application ID was not provided when initializing the payment form</td>\n</tr>\n<tr>\n<td><code>MISSING_CARD_DATA</code></td>\n<td>One or more card data fields was not filled out in the payment form</td>\n</tr>\n<tr>\n<td><code>TOO_MANY_REQUESTS</code></td>\n<td>Your application has generated too many nonce generation requests in too short a time</td>\n</tr>\n<tr>\n<td><code>UNAUTHORIZED</code></td>\n<td>Your application is not authorized to use the Connect API to accept online payments</td>\n</tr>\n<tr>\n<td><code>UNSUPPORTED_CARD_BRAND</code></td>\n<td>Card is not supported</td>\n</tr>\n<tr>\n<td><code>UNKNOWN</code></td>\n<td>An unknown error occurred</td>\n</tr>\n<tr>\n<td><code>VALIDATION_ERROR</code></td>\n<td>The provided data is invalid</td>\n</tr>\n</tbody></table>\n<p><strong>Error Fields</strong></p>\n<p>Two errors can be associated with a particular field:</p>\n<ul>\n<li><code>UNSUPPORTED_CARD_BRAND</code> (<code>cardNumber</code>)</li>\n<li><code>VALIDATION_ERROR</code> (<code>cardNumber</code>, <code>cvv</code>, <code>expirationDate</code>, or <code>cvv</code>)</li>\n</ul>\n<p>If the error can be associated with a field, it will be one of these values, as\nlisted above:</p>\n<ul>\n<li><code>cardNumber</code>: Credit card number is not valid</li>\n<li><code>expirationDate</code>: Expiration date is not valid</li>\n<li><code>postalCode</code>: Expiration date is not valid</li>\n<li><code>cvv</code>: CVV is not valid</li>\n</ul>\n<p><strong>Contact Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>familyName</code></td>\n<td>string</td>\n<td>Last name of the contact</td>\n</tr>\n<tr>\n<td><code>givenName</code></td>\n<td>string</td>\n<td>First name of the contact</td>\n</tr>\n<tr>\n<td><code>email</code></td>\n<td>string</td>\n<td>Email address of the contact</td>\n</tr>\n<tr>\n<td><code>country</code></td>\n<td>string</td>\n<td>A 2-letter string containing the ISO 3166-1 country code of the contact address</td>\n</tr>\n<tr>\n<td><code>countryName</code></td>\n<td>string</td>\n<td>The full country name of the contact. Read only.</td>\n</tr>\n<tr>\n<td><code>region</code></td>\n<td>string</td>\n<td>The applicable administrative region (e.g., province, state) of the contact address</td>\n</tr>\n<tr>\n<td><code>city</code></td>\n<td>string</td>\n<td>The city name of the contact address</td>\n</tr>\n<tr>\n<td><code>addressLines</code></td>\n<td>string[]</td>\n<td>The street address lines of the contact address</td>\n</tr>\n<tr>\n<td><code>postalCode</code></td>\n<td>string</td>\n<td>The postal code of the contact address</td>\n</tr>\n<tr>\n<td><code>phone</code></td>\n<td>string</td>\n<td>The telephone number of the contact</td>\n</tr>\n</tbody></table>\n<p><strong>Shipping Option Object (Apple Pay Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>id</td>\n<td>string</td>\n<td>A unique ID to reference this shipping option</td>\n</tr>\n<tr>\n<td>label</td>\n<td>string</td>\n<td>A short title for this shipping option. Shown in the Apple Pay interface</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>string</td>\n<td>The cost of this shipping option as a string representation of a float. The value can be &quot;0.00&quot;</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"onCardNonceResponseReceived","type":"SqPaymentFormCallbackOnCardNonceResponseReceived","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":608,"description":"<div class=\"docs-md\"><p>Internal field that maintains a reference to the current SqPaymentForm\ninstance that the component has built.</p></div>","access":"private","tags":[],"name":"paymentForm","type":"SqPaymentForm","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":480,"description":"<div class=\"docs-md\"><p>Callback that gets fired when a customer selects a new shipping address in a Apple Pay.</p>\n<p>Use this callback to validate a the buyer shipping contact. If validation indicates a problem, return\nan error message for the buyer. Update payment request details if a change in shipping address requires it.</p>\n<p>You <strong>must</strong> call <code>done</code> when using this callback.</p>\n<p><strong>Example</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">shippingContact, done</span>) </span>{\n <span class=\"hljs-keyword\">var</span> valid = <span class=\"hljs-literal\">true</span>;\n <span class=\"hljs-keyword\">var</span> shippingErrors = {};\n\n <span class=\"hljs-keyword\">if</span> (!shippingContact.postalCode) {\n   shippingErrors.postalCode = <span class=\"hljs-string\">\"postal code is required\"</span>;\n   valid = <span class=\"hljs-literal\">false</span>;\n }\n <span class=\"hljs-keyword\">if</span> (!shippingContact.addressLines) {\n   shippingErrors.addressLines = <span class=\"hljs-string\">\"address lines are required\"</span>;\n   valid = <span class=\"hljs-literal\">false</span>;\n }\n\n <span class=\"hljs-keyword\">if</span> (!valid) {\n   done({<span class=\"hljs-attr\">shippingContactErrors</span>: shippingErrors});\n   <span class=\"hljs-keyword\">return</span>;\n }\n\n <span class=\"hljs-comment\">// Shipping address unserviceable.</span>\n <span class=\"hljs-keyword\">if</span> (shippingContact.country !== <span class=\"hljs-string\">'US'</span> || shippingContact.country !== <span class=\"hljs-string\">'CA'</span>) {\n   done({<span class=\"hljs-attr\">error</span>: <span class=\"hljs-string\">'Shipping to outside of the U.S. and Canada is not available.'</span>});\n   <span class=\"hljs-keyword\">return</span>;\n }\n\n <span class=\"hljs-comment\">// Update total, lineItems, and shippingOptions for Canadian address.</span>\n <span class=\"hljs-keyword\">if</span> (shippingContact.country === <span class=\"hljs-string\">'CA'</span>) {\n   done({\n     <span class=\"hljs-attr\">total</span>: {\n       <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Total\"</span>,\n       <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"UPDATED AMOUNT\"</span>,\n       <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n     },\n    <span class=\"hljs-comment\">// Note: lineItems REPLACES the set of the line items in the PaymentRequest</span>\n     lineItems: [\n       ...\n\n       {\n         <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Tax\"</span>,\n         <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"UPDATED AMOUNT\"</span>,\n         <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n       }\n     ],\n     <span class=\"hljs-attr\">shippingOptions</span>: [\n       {\n         <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">\"1\"</span>,\n         <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"SHIPPING LABEL\"</span>,\n         <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"SHIPPING AMOUNT\"</span>\n       }\n     ]\n   });\n   <span class=\"hljs-keyword\">return</span>;\n }\n\n <span class=\"hljs-comment\">// No changes are necessary.</span>\n done();\n}</code></pre>\n<p><strong>Parameters</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>shippingContact</code></td>\n<td>RedactedShippingContact</td>\n<td>Redacted shipping contact that buyer selected in the Apple Pay payment sheet.</td>\n</tr>\n<tr>\n<td><code>done</code></td>\n<td>function(PaymentDetailsObject)</td>\n<td>Use to update the payment amount after taxes, service fees, or similar charges are recalculated.</td>\n</tr>\n</tbody></table>\n<p><strong>Payment Details Update Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>error</code></td>\n<td>string</td>\n<td>Optional. Use this error if the shipping address is valid but the item cannot be shipped to that address.</td>\n</tr>\n<tr>\n<td><code>shippingContactErrors</code></td>\n<td>ShippingErrors</td>\n<td>Optional. Allows for granular validation errors for addressLine, country, city, region and postal code.</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>LineItem</td>\n<td>Optional. Change the total amount of the transaction</td>\n</tr>\n<tr>\n<td><code>lineItems</code></td>\n<td>LineItem[]</td>\n<td>Optional. To update the line items - most common updates are to add the cost of shipping and the sales tax based on the buyer’s shipping address.</td>\n</tr>\n<tr>\n<td><code>shippingOptions</code></td>\n<td>ShippingOption[]</td>\n<td>Optional. This is updated in response to the customer choosing a new shipping address</td>\n</tr>\n</tbody></table>\n<p><strong>Redacted Shipping Contact Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>country</code></td>\n<td>string</td>\n<td>A 2-letter string containing the ISO 3166-1 country code of the contact address</td>\n</tr>\n<tr>\n<td><code>countryName</code></td>\n<td>string</td>\n<td>The full country name of the contact. Read only.</td>\n</tr>\n<tr>\n<td><code>region</code></td>\n<td>string</td>\n<td>The applicable administrative region (e.g., province, state) of the contact address</td>\n</tr>\n<tr>\n<td><code>city</code></td>\n<td>string</td>\n<td>The city name of the contact address</td>\n</tr>\n<tr>\n<td><code>postalCode</code></td>\n<td>string</td>\n<td>The postal code of the contact address</td>\n</tr>\n</tbody></table>\n<p><strong>Line Item Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>label</code></td>\n<td>string</td>\n<td>Human-readable string that explains the purpose of the amount. For a line item, this is typically the name of the charge or object purchased. For the total field, this is typically the merchant name.</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>string</td>\n<td>The cost of the object as a string representation of a float with 2 decimal places. (e.g., &quot;15.00&quot;). For a line item, this is typically the cost of the object, a subtotal, or additional charge (e.g., taxes, shipping). For the total field, this is the total charge of the transaction and should equal the sum of the line item amounts.</td>\n</tr>\n<tr>\n<td><code>pending</code></td>\n<td>boolean</td>\n<td>Optional. A boolean indicating whether or not the value in the amount field represents an estimated or unknown cost. Typically, this field is false.</td>\n</tr>\n</tbody></table>\n<p><strong>Shipping Errors Object (Apple Pay Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>label</code></td>\n<td>string</td>\n<td>Human-readable string that explains the purpose of the amount. For a line item, this is typically the name of the charge or object purchased. For the total field, this is typically the merchant name.</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>string</td>\n<td>The cost of the object as a string representation of a float with 2 decimal places. (e.g., &quot;15.00&quot;). For a line item, this is typically the cost of the object, a subtotal, or additional charge (e.g., taxes, shipping). For the total field, this is the total charge of the transaction and should equal the sum of the line item amounts.</td>\n</tr>\n<tr>\n<td><code>pending</code></td>\n<td>boolean</td>\n<td>Optional. A boolean indicating whether or not the value in the amount field represents an estimated or unknown cost. Typically, this field is false.</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"shippingContactChanged","type":"undefined | function","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":548,"description":"<div class=\"docs-md\"><p>Callback that gets fired when a customer selects a new shipping option in Apple Pay.</p>\n<p>You can use this to recalculate and update fields such as taxes or the total cost. You <strong>must</strong> call\n<code>done</code> when using this callback.</p>\n<p><strong>Example</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">shippingOption, done</span>) </span>{\n  <span class=\"hljs-comment\">// Creates a new array of line items that includes only 1 line</span>\n  <span class=\"hljs-comment\">// item. The item for a shipping option. Production code would get the</span>\n  <span class=\"hljs-comment\">// array of line items from the original PaymentRequest and add/update a line</span>\n  <span class=\"hljs-comment\">// item for the shippingOption argument of this callback.</span>\n  <span class=\"hljs-keyword\">const</span> newLineItems = [{\n    <span class=\"hljs-attr\">label</span>: shippingOption.label,\n    <span class=\"hljs-attr\">amount</span>: shippingOption.amount,\n    <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n  }];\n  <span class=\"hljs-keyword\">const</span> newTotal = {\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Total\"</span>,\n\n    <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">TODO:</span> total amount to be calc'd based on difference between old and new</span>\n    <span class=\"hljs-comment\">// amount of this shippingOption.amount if shippingOption.amount was updated.</span>\n    <span class=\"hljs-comment\">// -- OR --</span>\n    <span class=\"hljs-comment\">// Increase total amount if the line item for this shippingOption is new.</span>\n    amount: <span class=\"hljs-string\">\"SOME_AMOUNT + shippingOption.amount\"</span>,\n    <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n  };\n\n  done({\n  <span class=\"hljs-comment\">// Note: newLineItems REPLACES the set of the line items in the PaymentRequest</span>\n  <span class=\"hljs-comment\">// newTotal REPLACES the original payment total.</span>\n  lineItems: newLineItems,\n  <span class=\"hljs-attr\">total</span>: newTotal\n};</code></pre>\n<p><strong>Parameters</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>shippingOption</code></td>\n<td>ShippingOption</td>\n<td>The shipping option the buyer selected in the Apple Pay payment sheet.</td>\n</tr>\n<tr>\n<td><code>done</code></td>\n<td>function(PaymentDetailsObject)</td>\n<td>Use to update the payment amount after taxes, service fees, or similar charges are recalculated.</td>\n</tr>\n</tbody></table>\n<p><strong>Shipping Option Object (Apple Pay Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>id</td>\n<td>string</td>\n<td>A unique ID to reference this shipping option</td>\n</tr>\n<tr>\n<td>label</td>\n<td>string</td>\n<td>A short title for this shipping option. Shown in the Apple Pay interface</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>string</td>\n<td>The cost of this shipping option as a string representation of a float. The value can be &quot;0.00&quot;</td>\n</tr>\n</tbody></table>\n<p><strong>Payment Details Update Object (Digital Wallets Only)</strong></p>\n<p>Note, this object has a limited selection of fields compared to the <code>shippingContactChanged</code> callback.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>total</code></td>\n<td>LineItem</td>\n<td>Optional. Change the total amount of the transaction</td>\n</tr>\n<tr>\n<td><code>lineItems</code></td>\n<td>LineItem[]</td>\n<td>Optional. To update the line items - most common updates are to add the cost of shipping and the sales tax based on the buyer’s shipping address.</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"shippingOptionChanged","type":"undefined | function","isStatic":false,"isRequired":true}],"methods":[{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":621,"description":"","access":"private","tags":[],"name":"didReceiveAttrs","isAsync":false,"isGenerator":false,"signatures":[{"params":[],"typeParams":[],"returns":{"type":"void"}}],"isStatic":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":658,"description":"","access":"private","tags":[],"name":"initializePaymentForm","isAsync":false,"isGenerator":false,"signatures":[{"params":[],"typeParams":[],"returns":{"type":"void"}}],"isStatic":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":793,"description":"<div class=\"docs-md\"><p>Tells the SqPaymentForm library to generate a card nonce.</p></div>","access":"private","tags":[],"decorators":[{"name":"action"}],"name":"requestCardNonce","isAsync":false,"isGenerator":false,"signatures":[{"params":[],"typeParams":[],"returns":{"type":"void"}}],"isStatic":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":777,"description":"<div class=\"docs-md\"><p>Checks to see if there is an existing payment form, and if so, removes\nits event bindings and removes the internal payment form reference.</p></div>","access":"private","tags":[],"name":"teardownPaymentForm","isAsync":false,"isGenerator":false,"signatures":[{"params":[],"typeParams":[],"returns":{"type":"undefined"}}],"isStatic":false},{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":645,"description":"","access":"private","tags":[],"name":"willDestroyElement","isAsync":false,"isGenerator":false,"signatures":[{"params":[{"name":"args","type":"any[]","isOptional":false,"isRest":true}],"typeParams":[],"returns":{"type":"void"}}],"isStatic":false}],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":578,"description":"<div class=\"docs-md\"><p>Checks if the form is to configured to accept any digital wallet payment methods</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"canShowDigitalWallets","type":"boolean","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[{"name":"yield","type":"{Hash}","description":" PaymentForm"},{"name":"yield","type":"{SquarePaymentFormApplePayButton}","description":" PaymentForm.ApplePayButton"},{"name":"yield","type":"{SquarePaymentFormCreditCardFields}","description":" PaymentForm.ApplePayButton"},{"name":"yield","type":"{SquarePaymentFormGooglePayButton}","description":" PaymentForm.ApplePayButton"},{"name":"yield","type":"{SquarePaymentFormMasterpassButton}","description":" PaymentForm.ApplePayButton"},{"name":"yield","type":"{boolean}","description":" PaymentForm.canShowApplePay"},{"name":"yield","type":"{boolean}","description":" PaymentForm.canShowDigitalWallets"},{"name":"yield","type":"{boolean}","description":" PaymentForm.canShowMasterpass"},{"name":"yield","type":"{Action}","description":" PaymentForm.requestCardNonce"}]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form","attributes":{"file":"ember-square-payment-form/components/square-payment-form","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form~SquarePaymentForm"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-apple-pay-button~SquarePaymentFormApplePayButton","attributes":{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":67,"description":"<div class=\"docs-md\"><p>Renders an Apple Pay button for use in the Square Payment Form, pre-styled to meet\nApple&#39;s Human Interface Guidelines.</p>\n<p>It includes the ability to change the type of the button to suit donations, subscriptions,\nor general purchases, as well as fields to localize the button copy or change the theme.</p>\n<p><strong>This component will only render in Safari when a customer can use Apple Pay.</strong></p>\n<p>If you need to adjust your content based on whether the Payment Form can accept Apple Pay or not,\nyou can use the <code>PaymentForm.canShowApplePay</code> property in your template, like so:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.ApplePayButton</span>/&gt;</span>\n\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span> PaymentForm.canShowApplePay}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Apple Pay is not available here.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span>}}</span><span class=\"xml\">\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.ApplePayButton}}</span><span class=\"xml\">\n\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span> PaymentForm.canShowApplePay}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Apple Pay is not available here.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Apple Pay;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"decorators":[{"name":"classNames"},{"name":"tagName"}],"exportType":"default","name":"SquarePaymentFormApplePayButton","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":199,"description":"<div class=\"docs-md\"><p>ID generated by the parent Payment Form component used to generate a reference to an\ninstance of this button.</p></div>","access":"private","tags":[],"name":"formId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":172,"description":"<div class=\"docs-md\"><p>Generates a BEM-compliant CSS class to hide Apple Pay when it&#39;s not supported.</p></div>","access":"private","tags":[],"decorators":[{"name":"className"}],"name":"isSupported","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":166,"description":"<div class=\"docs-md\"><p>Adds an ARIA label to describe the button since there&#39;s no text for a screenreader to use.</p></div>","access":"private","tags":[],"decorators":[{"name":"attribute"}],"name":"label","type":"string","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":88,"description":"<div class=\"docs-md\"><p>HTML language code to set on the button.</p>\n<p><strong>Default Value</strong>: <code>en-US</code></p>\n<p><strong>Example: Render an Apple Pay button in French for Canadians</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.ApplePayButton</span> @<span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"fr-CA\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span>/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.ApplePayButton lang=\"fr-CA\"}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Apple Pay;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"name":"lang","type":"string","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":118,"description":"<div class=\"docs-md\"><p>Color style for the Apple Pay button, per <a href=\"https://developer.apple.com/documentation/apple_pay_on_the_web/displaying_apple_pay_buttons\"  class=\"docs-md__a\">Apple&#39;s documentation</a>.</p>\n<p><strong>Default Value</strong>: <code>black</code> (black button with white text)</p>\n<p><strong>Supported Values</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>black</code></td>\n<td>Black button with white text and no border</td>\n</tr>\n<tr>\n<td><code>white</code></td>\n<td>White button with black text and no border</td>\n</tr>\n<tr>\n<td><code>white-outline</code></td>\n<td>White button with black text and black border</td>\n</tr>\n</tbody></table>\n<p><strong>Example: Render a white Apple Pay button with black text</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.ApplePayButton</span> @<span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"white\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span>/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.ApplePayButton style=\"white\"}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Apple Pay;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"name":"style","type":"ApplePayStyles","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":157,"description":"<div class=\"docs-md\"><p>Button type for the Apple Pay button, per <a href=\"https://developer.apple.com/documentation/apple_pay_on_the_web/displaying_apple_pay_buttons\"  class=\"docs-md__a\">Apple&#39;s documentation</a>.\nYou should refer to Apple&#39;s <a href=\"https://developer.apple.com/design/human-interface-guidelines/apple-pay/overview/buttons-and-marks/\"  class=\"docs-md__a\">Human Interface Guidelines</a>\nto determine which button type you should use.</p>\n<p>Some of the values (<code>check-out</code>, <code>book</code>, and <code>subscribe</code>) are only available on iOS 12.1+\nand Safari 12.0+. If you use any of these types and a user views it on an old browser, it will\ngracefully fall back to the <code>plain</code> button without you doing anything.</p>\n<p><strong>Default Value</strong>: <code>plain</code> (Apple Pay logo centered on button)</p>\n<p><strong>Supported Values</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>plain</code></td>\n<td>Apple Pay logo</td>\n</tr>\n<tr>\n<td><code>buy</code></td>\n<td>&quot;Buy with&quot; followed by the Apple Pay logo</td>\n</tr>\n<tr>\n<td><code>donate</code></td>\n<td>&quot;Donate with&quot; followed by the Apple Pay logo</td>\n</tr>\n<tr>\n<td><code>check-out</code></td>\n<td>&quot;Check out with&quot; followed by the Apple Pay logo</td>\n</tr>\n<tr>\n<td><code>book</code></td>\n<td>&quot;Book with&quot; followed by the Apple Pay logo</td>\n</tr>\n<tr>\n<td><code>subscribe</code></td>\n<td>&quot;Subscribe with&quot; followed by the Apple Pay logo</td>\n</tr>\n</tbody></table>\n<p><strong>Example: Render a &#39;Donate&#39; button for a Non-Profit</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.ApplePayButton</span> @<span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"donate\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span>/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.ApplePayButton type=\"donate\"}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Apple Pay;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"name":"type","type":"ApplePayTypes","isStatic":false,"isRequired":false}],"methods":[],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":180,"description":"<div class=\"docs-md\"><p>Generates a BEM-compliant CSS class derived from the style property.</p></div>","access":"private","tags":[],"decorators":[{"name":"className"},{"name":"computed"}],"name":"applePayStyleClass","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":190,"description":"<div class=\"docs-md\"><p>Generates a BEM-compliant CSS class derived from the type property.</p></div>","access":"private","tags":[],"decorators":[{"name":"className"},{"name":"computed"}],"name":"applePayTypeClass","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":208,"description":"<div class=\"docs-md\"><p>Generated HTML ID referenced by the parent Payment Form component to reference an\ninstance of this button.</p></div>","access":"private","tags":[],"decorators":[{"name":"attribute"},{"name":"computed"}],"name":"uniqueApplePayId","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-apple-pay-button","attributes":{"file":"ember-square-payment-form/components/square-payment-form-apple-pay-button","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-apple-pay-button~SquarePaymentFormApplePayButton"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input~SquarePaymentFormCvvInput","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input","lineNumber":37,"description":"<div class=\"docs-md\"><p>Renders a placeholder element that gets replaced with a secure Square <code>&lt;iframe&gt;</code> tag by the SqPaymentForm JS\nlibrary. The <code>&lt;iframe&gt;</code> then renders an <code>&lt;input&gt;</code> tag for the CVV code.</p>\n<p>When accepting credit card payments, you <strong>must</strong> have this component inside your form.</p>\n<p>This component may only be used in <em>yielded</em> form, where it is yielded by the\n<code>SquarePaymentFormCreditCardFields</code> component as the <code>CvvInput</code> property.</p>\n<p><strong>Example: Render a CVV input inside the payment form</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.CvvInput</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    </span><span class=\"hljs-template-variable\">{{Fields.CvvInput}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"decorators":[{"name":"layout"}],"exportType":"default","name":"SquarePaymentFormCvvInput","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input","lineNumber":76,"description":"<div class=\"docs-md\"><p>Passed down unique identifier for the current Square Payment Form; used to prevent\nrender multiple Payment Forms in a single document without running into duplicate\nDOM IDs.</p></div>","access":"private","tags":[],"name":"formId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input","lineNumber":68,"description":"<div class=\"docs-md\"><p>Greyed-out string that shows up in the CVV input field before a customer begins typing\nin their CVV code.</p>\n<p><strong>Default Value:</strong> <code>CVV</code></p>\n<p><strong>Example: Replace the Default Placeholder</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>CVV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.CvvInput</span> @<span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"123\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>&gt;\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>CVV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.CvvInput placeholder=\"123\"}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"name":"placeholder","type":"undefined | string","isStatic":false,"isRequired":true}],"methods":[],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input","lineNumber":84,"description":"<div class=\"docs-md\"><p>Renders the placeholder property to a data attribute so the parent component can\ninject it into the SqPaymentForm build cycle.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"placeholderAttribute","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input","lineNumber":94,"description":"<div class=\"docs-md\"><p>Generated HTML ID referenced by the parent Payment Form component to reference an\ninstance of this input.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"uniqueCvvInputId","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-cvv-input~SquarePaymentFormCvvInput"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input~SquarePaymentFormCreditCardExpirationDateInput","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input","lineNumber":37,"description":"<div class=\"docs-md\"><p>Renders a placeholder element that gets replaced with a secure Square <code>&lt;iframe&gt;</code> tag by the SqPaymentForm JS\nlibrary. The <code>&lt;iframe&gt;</code> then renders an <code>&lt;input&gt;</code> tag for the credit card expiration date.</p>\n<p>When accepting credit card payments, you <strong>must</strong> have this component inside your form.</p>\n<p>This component may only be used in <em>yielded</em> form, where it is yielded by the\n<code>SquarePaymentFormCreditCardFields</code> component as the <code>ExpirationDateInput</code> property.</p>\n<p><strong>Example: Render an expiration date input inside the payment form</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.ExpirationDateInput</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    </span><span class=\"hljs-template-variable\">{{Fields.ExpirationDateInput}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"decorators":[{"name":"layout"}],"exportType":"default","name":"SquarePaymentFormCreditCardExpirationDateInput","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input","lineNumber":76,"description":"<div class=\"docs-md\"><p>Passed down unique identifier for the current Square Payment Form; used to prevent\nrender multiple Payment Forms in a single document without running into duplicate\nDOM IDs.</p></div>","access":"private","tags":[],"name":"formId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input","lineNumber":68,"description":"<div class=\"docs-md\"><p>Greyed-out string that shows up in the expiration date input field before a customer\nbegins typing in their expiration date.</p>\n<p><strong>Default Value:</strong> <code>MM/YY</code></p>\n<p><strong>Example: Replace the Default Placeholder</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Expiration Date<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.ExpirationDateInput</span> @<span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"00/00\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>&gt;\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Expiration Date<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.ExpirationDateInput placeholder=\"00/00\"}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"name":"placeholder","type":"undefined | string","isStatic":false,"isRequired":true}],"methods":[],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input","lineNumber":84,"description":"<div class=\"docs-md\"><p>Renders the placeholder property to a data attribute so the parent component can\ninject it into the SqPaymentForm build cycle.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"placeholderAttribute","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input","lineNumber":94,"description":"<div class=\"docs-md\"><p>Generated HTML ID referenced by the parent Payment Form component to reference an\ninstance of this input.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"uniqueExpirationInputId","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-expiration-date-input~SquarePaymentFormCreditCardExpirationDateInput"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-fields~SquarePaymentFormCreditCardFields","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-fields","lineNumber":66,"description":"<div class=\"docs-md\"><p>Yields credit card field input components that can be used to build a credit card form.</p>\n<p><strong>Example: Build a Credit Card Form</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Card Number<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.NumberInput</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Expiration<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.ExpirationDateInput</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>CVV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.CvvInput</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Postal<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.PostalCodeInput</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>&gt;\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Card Number<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.NumberInput}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Expiration<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.ExpirationDateInput}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>CVV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.CvvInput}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Postal<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.PostalCodeInput}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"decorators":[{"name":"layout"}],"exportType":"default","name":"SquarePaymentFormCreditCardFields","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-fields","lineNumber":73,"description":"<div class=\"docs-md\"><p>Passed down unique identifier for the current Square Payment Form; used to prevent\nrender multiple Payment Forms in a single document without running into duplicate\nDOM IDs.</p></div>","access":"private","tags":[],"name":"formId","type":"string","isStatic":false,"isRequired":true}],"methods":[],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-fields","lineNumber":82,"description":"<div class=\"docs-md\"><p>Generated HTML ID referenced by the parent Payment Form component to reference an\ninstance of this input.</p></div>","access":"private","tags":[],"decorators":[{"name":"attribute"},{"name":"computed"}],"name":"uniqueFieldsIdentifier","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[{"name":"yield","type":"{Hash}","description":" Fields"},{"name":"yield","type":"{SquarePaymentFormCreditCardCVVInput}","description":" Fields.CvvInput"},{"name":"yield","type":"{SquarePaymentFormCreditCardExpirationDateInput}","description":" Fields.ExpirationDateInput"},{"name":"yield","type":"{SquarePaymentFormCreditCardNumberInput}","description":" Fields.NumberInput"},{"name":"yield","type":"{SquarePaymentFormCreditCardPostalCodeInput}","description":" Fields.PostalCodeInput"}]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-fields","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-fields","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-fields~SquarePaymentFormCreditCardFields"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-number-input~SquarePaymentFormCreditCardNumberInput","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-number-input","lineNumber":37,"description":"<div class=\"docs-md\"><p>Renders a placeholder element that gets replaced with a secure Square <code>&lt;iframe&gt;</code> tag by the SqPaymentForm JS\nlibrary. The <code>&lt;iframe&gt;</code> then renders an <code>&lt;input&gt;</code> tag for the credit card number.</p>\n<p>When accepting credit card payments, you <strong>must</strong> have this component inside your form.</p>\n<p>This component may only be used in <em>yielded</em> form, where it is yielded by the\n<code>SquarePaymentFormCreditCardFields</code> component as the <code>NumberInput</code> property.</p>\n<p><strong>Example: Render a credit card number input inside the payment form</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.NumberInput</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    </span><span class=\"hljs-template-variable\">{{Fields.NumberInput}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"decorators":[{"name":"layout"}],"exportType":"default","name":"SquarePaymentFormCreditCardNumberInput","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-number-input","lineNumber":77,"description":"<div class=\"docs-md\"><p>Passed down unique identifier for the current Square Payment Form; used to prevent\nrender multiple Payment Forms in a single document without running into duplicate\nDOM IDs.</p></div>","access":"private","tags":[],"name":"formId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-credit-card-number-input","lineNumber":69,"description":"<div class=\"docs-md\"><p>Greyed-out string that shows up in the credit card number input field before a customer\nbegins typing in their credit card number.</p>\n<p><strong>Default Value:</strong> <code>• • • •  • • • •  • • • •  • • • •</code></p>\n<p><strong>Example: Replace the Default Placeholder</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Credit Card Number<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.NumberInput</span> @<span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"Credit Card Number\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>&gt;\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Credit Card Number<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.NumberInput placeholder=\"Credit Card Number\"}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"name":"placeholder","type":"undefined | string","isStatic":false,"isRequired":true}],"methods":[],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-number-input","lineNumber":85,"description":"<div class=\"docs-md\"><p>Renders the placeholder property to a data attribute so the parent component can\ninject it into the SqPaymentForm build cycle.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"placeholderAttribute","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-credit-card-number-input","lineNumber":95,"description":"<div class=\"docs-md\"><p>Generated HTML ID referenced by the parent Payment Form component to reference an\ninstance of this input.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"uniqueCcInputId","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-number-input","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-number-input","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-number-input~SquarePaymentFormCreditCardNumberInput"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input~SquarePaymentFormCreditCardPostalCodeInput","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input","lineNumber":38,"description":"<div class=\"docs-md\"><p>Renders a placeholder element that gets replaced with a secure Square <code>&lt;iframe&gt;</code> tag by the SqPaymentForm JS\nlibrary. The <code>&lt;iframe&gt;</code> then renders an <code>&lt;input&gt;</code> tag for the postal code.</p>\n<p>When accepting <strong>US</strong>-issued credit cards, you <strong>must</strong> have this component inside your form.\nFor cards issued in all other countries, this component is <em>optional</em>.</p>\n<p>This component may only be used in <em>yielded</em> form, where it is yielded by the\n<code>SquarePaymentFormCreditCardFields</code> component as the <code>PostalCodeInput</code> property.</p>\n<p><strong>Example: Render a postal code input inside the payment form</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.PostalCodeInput</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    </span><span class=\"hljs-template-variable\">{{Fields.PostalCodeInput}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"decorators":[{"name":"layout"}],"exportType":"default","name":"SquarePaymentFormCreditCardPostalCodeInput","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input","lineNumber":77,"description":"<div class=\"docs-md\"><p>Passed down unique identifier for the current Square Payment Form; used to prevent\nrender multiple Payment Forms in a single document without running into duplicate\nDOM IDs.</p></div>","access":"private","tags":[],"name":"formId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input","lineNumber":69,"description":"<div class=\"docs-md\"><p>Greyed-out string that shows up in the postal code input field before a customer begins\ntyping in their postal code.</p>\n<p><strong>Default Value:</strong> <code>12345</code></p>\n<p><strong>Example: Replace the Default Placeholder</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">Fields</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Postal<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Fields.PostalCodeInput</span> @<span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"55555\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>&gt;\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">PaymentForm.CreditCardFields</span> as |Fields|}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Postal<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      </span><span class=\"hljs-template-variable\">{{Fields.PostalCodeInput placeholder=\"55555\"}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">PaymentForm.CreditCardFields</span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"name":"placeholder","type":"undefined | string","isStatic":false,"isRequired":true}],"methods":[],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input","lineNumber":85,"description":"<div class=\"docs-md\"><p>Renders the placeholder property to a data attribute so the parent component can\ninject it into the SqPaymentForm build cycle.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"placeholderAttribute","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input","lineNumber":95,"description":"<div class=\"docs-md\"><p>Generated HTML ID referenced by the parent Payment Form component to reference an\ninstance of this input.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"uniquePostalInputId","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input","attributes":{"file":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-credit-card-postal-code-input~SquarePaymentFormCreditCardPostalCodeInput"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-google-pay-button~SquarePaymentFormGooglePayButton","attributes":{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":72,"description":"<div class=\"docs-md\"><p>Renders a Google Pay button for use in the Square Payment Form, pre-styled to meet\nGoogle&#39;s branding guidelines.</p>\n<p>It includes the ability to change the theme of the button and localize the button copy.</p>\n<p><strong>This component will only render when a customer can use Google Pay.</strong></p>\n<p>If you need to adjust your content based on whether the Payment Form can accept Google Pay or not,\nyou can use the <code>PaymentForm.canShowGooglePay</code> property in your template, like so:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.GooglePayButton</span>/&gt;</span>\n\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span> PaymentForm.canShowGooglePay}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Google Pay is not available here.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span>}}</span><span class=\"xml\">\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.GooglePayButton}}</span><span class=\"xml\">\n\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span> PaymentForm.canShowGooglePay}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Google Pay is not available here.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Google Pay;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"decorators":[{"name":"classNames"},{"name":"tagName"}],"exportType":"default","name":"SquarePaymentFormGooglePayButton","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":212,"description":"<div class=\"docs-md\"><p>ID generated by the parent Payment Form component used to generate a reference to an\ninstance of this button.</p></div>","access":"private","tags":[],"name":"formId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":175,"description":"<div class=\"docs-md\"><p>Generates a BEM-compliant CSS class to hide Google Pay when it&#39;s not supported.</p></div>","access":"private","tags":[],"decorators":[{"name":"className"}],"name":"isSupported","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":169,"description":"<div class=\"docs-md\"><p>Adds an ARIA label to describe the button since there&#39;s no text for a screenreader to use.</p></div>","access":"private","tags":[],"decorators":[{"name":"attribute"}],"name":"label","type":"string","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":102,"description":"<div class=\"docs-md\"><p>HTML language code to set on the button.</p>\n<p><strong>Default Value</strong>: <code>en</code></p>\n<p><strong>Supported Values</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>en</code></td>\n<td>English</td>\n</tr>\n<tr>\n<td><code>es</code></td>\n<td>Spanish</td>\n</tr>\n<tr>\n<td><code>fr</code></td>\n<td>French</td>\n</tr>\n<tr>\n<td><code>ja</code></td>\n<td>Japanese</td>\n</tr>\n</tbody></table>\n<p><strong>Example: Render a Google Pay button in French for Canadians</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.GooglePayButton</span> @<span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"fr\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span>/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.GooglePayButton lang=\"fr\"}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Google Pay;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"name":"lang","type":"GooglePayLanguages","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":131,"description":"<div class=\"docs-md\"><p>Color style for the Google Pay button.</p>\n<p><strong>Default Value</strong>: <code>black</code> (black button with white text)</p>\n<p><strong>Supported Values</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>black</code></td>\n<td>Black button with white text</td>\n</tr>\n<tr>\n<td><code>white</code></td>\n<td>White button with black text</td>\n</tr>\n</tbody></table>\n<p><strong>Example: Render a white Google Pay button with black text</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.GooglePayButton</span> @<span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"white\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span>/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.GooglePayButton style=\"white\"}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Google Pay;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"name":"style","type":"GooglePayStyles","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":161,"description":"<div class=\"docs-md\"><p>Button type for the Google Pay button; determines whether or not to show text alongside\nthe Google Pay logo on the button.</p>\n<p><strong>Default Value</strong>: <code>short</code> (Google Pay logo centered on button)</p>\n<p><strong>Supported Values</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>short</code></td>\n<td>Google Pay logo</td>\n</tr>\n<tr>\n<td><code>long</code></td>\n<td>&quot;Buy with&quot; followed by the Google Pay logo</td>\n</tr>\n</tbody></table>\n<p><strong>Example: Render a button with both text and Google Pay logo</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.GooglePayButton</span> @<span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"long\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span>/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.GooglePayButton type=\"long\"}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Google Pay;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"name":"type","type":"GooglePayTypes","isStatic":false,"isRequired":false}],"methods":[],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":183,"description":"<div class=\"docs-md\"><p>Generates a BEM-compliant CSS class derived from the lang property.</p></div>","access":"private","tags":[],"decorators":[{"name":"className"},{"name":"computed"}],"name":"googlePayLangClass","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":193,"description":"<div class=\"docs-md\"><p>Generates a BEM-compliant CSS class derived from the style property.</p></div>","access":"private","tags":[],"decorators":[{"name":"className"},{"name":"computed"}],"name":"googlePayStyleClass","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":203,"description":"<div class=\"docs-md\"><p>Generates a BEM-compliant CSS class derived from the type property.</p></div>","access":"private","tags":[],"decorators":[{"name":"className"},{"name":"computed"}],"name":"googlePayTypeClass","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":221,"description":"<div class=\"docs-md\"><p>Generated HTML ID referenced by the parent Payment Form component to reference an\ninstance of this button.</p></div>","access":"private","tags":[],"decorators":[{"name":"attribute"},{"name":"computed"}],"name":"uniqueGooglePayId","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-google-pay-button","attributes":{"file":"ember-square-payment-form/components/square-payment-form-google-pay-button","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-google-pay-button~SquarePaymentFormGooglePayButton"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-masterpass-button~SquarePaymentFormMasterpassButton","attributes":{"file":"ember-square-payment-form/components/square-payment-form-masterpass-button","lineNumber":41,"description":"<div class=\"docs-md\"><p>Renders a Materpass button for use in the Square Payment Form, pre-styled to meet\nMasterpass branding guidelines.</p>\n<p>It includes the ability to change the theme of the button and localize the button copy.</p>\n<p><strong>This component will only render when a customer can use Masterpass.</strong></p>\n<p>If you need to adjust your content based on whether the Payment Form can accept Masterpass or not,\nyou can use the <code>PaymentForm.canShowMasterpass</code> property in your template, like so:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentForm</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">PaymentForm</span>|&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PaymentForm.MasterpassButton</span>/&gt;</span>\n\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span> PaymentForm.canShowMasterpass}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Masterpass is not available here.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span>}}</span><span class=\"xml\">\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">SquarePaymentForm</span>&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if you're using &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">square-payment-form</span> as |PaymentForm|}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">{{PaymentForm.MasterpassButton}}</span><span class=\"xml\">\n\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span> PaymentForm.canShowMasterpass}}</span><span class=\"xml\">\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Masterpass is not available here.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">unless</span></span>}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">square-payment-form</span>}}</span><span class=\"xml\"></span></code></pre>\n<p><em>Note: you&#39;ll need to configure the SquarePaymentForm to implement Masterpass;</em>\n<em>you can read more in the digital wallets guide.</em></p></div>","access":"public","tags":[],"decorators":[{"name":"classNames"},{"name":"tagName"}],"exportType":"default","name":"SquarePaymentFormMasterpassButton","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-masterpass-button","lineNumber":62,"description":"<div class=\"docs-md\"><p>ID generated by the parent Payment Form component used to generate a reference to an\ninstance of this button.</p></div>","access":"private","tags":[],"name":"formId","type":"string","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-masterpass-button","lineNumber":55,"description":"<div class=\"docs-md\"><p>Generates a BEM-compliant CSS class to hide Masterpass when it&#39;s not supported.</p></div>","access":"private","tags":[],"decorators":[{"name":"className"}],"name":"isSupported","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-masterpass-button","lineNumber":49,"description":"<div class=\"docs-md\"><p>Adds an ARIA label to describe the button since there&#39;s no text for a screenreader to use.</p></div>","access":"private","tags":[],"decorators":[{"name":"attribute"}],"name":"label","type":"string","isStatic":false,"isRequired":false}],"methods":[],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-masterpass-button","lineNumber":71,"description":"<div class=\"docs-md\"><p>Generated HTML ID referenced by the parent Payment Form component to reference an\ninstance of this button.</p></div>","access":"private","tags":[],"decorators":[{"name":"attribute"},{"name":"computed"}],"name":"uniqueMasterpassId","type":"string","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-masterpass-button","attributes":{"file":"ember-square-payment-form/components/square-payment-form-masterpass-button","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-masterpass-button~SquarePaymentFormMasterpassButton"}]}}},{"type":"component","id":"ember-square-payment-form/components/square-payment-form-styled~SquarePaymentFormStyled","attributes":{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":70,"description":"<div class=\"docs-md\"><p>The styled Square Payment Form component lets you get up and running quickly with Square\nby providing a beautiful customer payment experience out of the box.</p>\n<p>It has full support for digital wallets and conventional credit cards, while saving you\ntime on CSS and JS styling.</p>\n<p>All you need to use this component are:</p>\n<ul>\n<li>An <code>applicationId</code> and a <code>locationId</code> from the <a href=\"https://connect.squareup.com/apps\"  class=\"docs-md__a\">Square Developer Dashboard</a></li>\n<li>An <code>onCardNonceResponseReceived</code> action to handle the nonce generated by the form and send it to your backend,\n so you can make a server-side charge request to Square.</li>\n</ul>\n<p>..and one additional argument for digital wallets:</p>\n<ul>\n<li>A <code>createPaymentRequest</code> action to return data to show information about the payment in the\nApple Pay, Google Pay, and Masterpass interfaces.</li>\n</ul>\n<p><strong>Example: Basic Payment Form</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentFormStyled</span>\n  @<span class=\"hljs-attr\">acceptCreditCards</span>=</span></span><span class=\"hljs-template-variable\">{{true}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n  @<span class=\"hljs-attr\">applicationId</span>=<span class=\"hljs-string\">\"my-app-id\"</span>\n  @<span class=\"hljs-attr\">locationId</span>=<span class=\"hljs-string\">\"my-location-id\"</span>\n  @<span class=\"hljs-attr\">onCardNonceResponseReceived</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"handleCardNonce\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n/&gt;</span></span></code></pre></div>","access":"public","tags":[],"decorators":[{"name":"layout"}],"exportType":"default","name":"SquarePaymentFormStyled","isInterface":false,"fields":[{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":110,"description":"<div class=\"docs-md\"><p>Toggles &quot;Pay with Apple Pay&quot; button.</p>\n<p>The Apple Pay button will only show if all of the following are true:</p>\n<ul>\n<li>This flag is enabled</li>\n<li>Customer is using the Safari web browser</li>\n<li>Your site is served with HTTPS</li>\n<li>You&#39;re using production credentials for the Square Payment Form</li>\n<li>You&#39;ve provided a payment request creation callback</li>\n<li>You&#39;ve provided a card nonce received callback</li>\n<li>You&#39;ve verified your domain for Apple Pay in the <a href=\"https://connect.squareup.com\"  class=\"docs-md__a\">Square Developer Dashboard</a></li>\n</ul>\n<p><strong>Example: Enable Apple Pay</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentFormStyled</span>\n  @<span class=\"hljs-attr\">acceptApplePay</span>=</span></span><span class=\"hljs-template-variable\">{{true}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n\n  @<span class=\"hljs-attr\">applicationId</span>=<span class=\"hljs-string\">\"my-app-id\"</span>\n  @<span class=\"hljs-attr\">locationId</span>=<span class=\"hljs-string\">\"my-location-id\"</span>\n\n  @<span class=\"hljs-attr\">createPaymentRequest</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"createPaymentRequest\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n  @<span class=\"hljs-attr\">onCardNonceResponseReceived</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"handleCardNonce\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if on &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-variable\">{{square-payment-form-styled\n  acceptApplePay=true\n\n  applicationId=\"my-app-id\"\n  locationId=\"my-location-id\"\n\n  createPaymentRequest=(<span class=\"hljs-builtin-name\">action</span> \"createPaymentRequest\")\n  onCardNonceResponseReceived=(<span class=\"hljs-builtin-name\">action</span> \"handleCardNonce\")\n}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"name":"acceptApplePay","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":115,"description":"<div class=\"docs-md\"><p>Toggles visibility of credit card fields (credit card number, expiration date, CVV, and postal code).</p></div>","access":"public","tags":[],"name":"acceptCreditCards","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":154,"description":"<div class=\"docs-md\"><p>Toggles &quot;Pay with Google Pay&quot; button</p>\n<p>The Google Pay button will only show if all of the following are true:</p>\n<ul>\n<li>This flag is enabled</li>\n<li>Your site is served with HTTPS</li>\n<li>You&#39;re using production credentials for the Square Payment Form</li>\n<li>You&#39;ve provided a payment request creation callback</li>\n<li>You&#39;ve provided a card nonce received callback</li>\n</ul>\n<p><strong>Example: Enable Google Pay</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentFormStyled</span>\n  @<span class=\"hljs-attr\">acceptGooglePay</span>=</span></span><span class=\"hljs-template-variable\">{{true}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n\n  @<span class=\"hljs-attr\">applicationId</span>=<span class=\"hljs-string\">\"my-app-id\"</span>\n  @<span class=\"hljs-attr\">locationId</span>=<span class=\"hljs-string\">\"my-location-id\"</span>\n\n  @<span class=\"hljs-attr\">createPaymentRequest</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"createPaymentRequest\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n  @<span class=\"hljs-attr\">onCardNonceResponseReceived</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"handleCardNonce\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if on &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-variable\">{{square-payment-form-styled\n  acceptGooglePay=true\n\n  applicationId=\"my-app-id\"\n  locationId=\"my-location-id\"\n\n  createPaymentRequest=(<span class=\"hljs-builtin-name\">action</span> \"createPaymentRequest\")\n  onCardNonceResponseReceived=(<span class=\"hljs-builtin-name\">action</span> \"handleCardNonce\")\n}}</span><span class=\"xml\"></span></code></pre></div>","access":"public","tags":[],"name":"acceptGooglePay","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":193,"description":"<div class=\"docs-md\"><p>Toggles &quot;Pay with Masterpass&quot; button</p>\n<p>The Masterpass button will only show if all of the following are true:</p>\n<ul>\n<li>This flag is enabled</li>\n<li>Your site is served with HTTPS</li>\n<li>You&#39;ve provided a payment request creation callback</li>\n<li>You&#39;ve provided a card nonce received callback</li>\n</ul>\n<p><strong>Example: Enable Masterpass</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SquarePaymentFormStyled</span>\n  @<span class=\"hljs-attr\">acceptMasterpass</span>=</span></span><span class=\"hljs-template-variable\">{{true}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n\n  @<span class=\"hljs-attr\">applicationId</span>=<span class=\"hljs-string\">\"my-app-id\"</span>\n  @<span class=\"hljs-attr\">locationId</span>=<span class=\"hljs-string\">\"my-location-id\"</span>\n\n  @<span class=\"hljs-attr\">createPaymentRequest</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"createPaymentRequest\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n  @<span class=\"hljs-attr\">onCardNonceResponseReceived</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"handleCardNonce\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">\n/&gt;</span>\n\n</span><span class=\"hljs-comment\">{{!-- or, if on &lt; Ember 3.4 --}}</span><span class=\"xml\">\n\n</span><span class=\"hljs-template-variable\">{{square-payment-form-styled\n  acceptMasterpass=true\n\n  applicationId=\"my-app-id\"\n  locationId=\"my-location-id\"\n\n  createPaymentRequest=(<span class=\"hljs-builtin-name\">action</span> \"createPaymentRequest\")\n  onCardNonceResponseReceived=(<span class=\"hljs-builtin-name\">action</span> \"handleCardNonce\")\n}}</span><span class=\"xml\">\n</span></code></pre></div>","access":"public","tags":[],"name":"acceptMasterpass","type":"boolean","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":413,"description":"<div class=\"docs-md\"><p><strong>Required for Digital Wallets</strong>: callback that gets fired when a digital wallet button is pressed.\nThis callback returns data to show information about the payment in the Apple Pay, Google Pay,\nand Masterpass interfaces.</p>\n<p>This method <strong>must</strong> return a <code>PaymentRequest</code> object.</p>\n<p><strong>Example</strong>: Sample function to create a payment request.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">requestShippingAddress</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">requestBillingInfo</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">shippingContact</span>: {\n      <span class=\"hljs-attr\">familyName</span>: <span class=\"hljs-string\">\"CUSTOMER LAST NAME\"</span>,\n      <span class=\"hljs-attr\">givenName</span>: <span class=\"hljs-string\">\"CUSTOMER FIRST NAME\"</span>,\n      <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">\"mycustomer@example.com\"</span>,\n      <span class=\"hljs-attr\">country</span>: <span class=\"hljs-string\">\"USA\"</span>,\n      <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">\"CA\"</span>,\n      <span class=\"hljs-attr\">city</span>: <span class=\"hljs-string\">\"San Francisco\"</span>,\n      <span class=\"hljs-attr\">addressLines</span>: [\n        <span class=\"hljs-string\">\"1455 Market St #600\"</span>\n      ],\n      <span class=\"hljs-attr\">postalCode</span>: <span class=\"hljs-string\">\"94103\"</span>\n    },\n    <span class=\"hljs-attr\">currencyCode</span>: <span class=\"hljs-string\">\"USD\"</span>,\n    <span class=\"hljs-attr\">countryCode</span>: <span class=\"hljs-string\">\"US\"</span>,\n    <span class=\"hljs-attr\">total</span>: {\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"MERCHANT NAME\"</span>,\n      <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"TOTAL AMOUNT\"</span>,\n      <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">lineItems</span>: [\n      {\n        <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Subtotal\"</span>,\n        <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"SUBTOTAL AMOUNT\"</span>,\n        <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n      },\n      {\n        <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Shipping\"</span>,\n        <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"SHIPPING AMOUNT\"</span>,\n        <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Tax\"</span>,\n        <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"TAX AMOUNT\"</span>,\n        <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n      }\n    ]\n  }\n}</code></pre>\n<p><strong>Payment Request Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>requestShippingAddress</code></td>\n<td>boolean</td>\n<td>Lets customers select a shipping address in the digital wallet UI.</td>\n</tr>\n<tr>\n<td><code>requestBillingInfo</code></td>\n<td>boolean</td>\n<td>Lets customers select a billing address in the digital wallet UI.</td>\n</tr>\n<tr>\n<td><code>shippingContact</code></td>\n<td>Contact</td>\n<td>Optional. Default shipping information to display in the digital wallet UI.</td>\n</tr>\n<tr>\n<td><code>countryCode</code></td>\n<td>string</td>\n<td>2-letter ISO 3166-1 alpha-2 country code</td>\n</tr>\n<tr>\n<td><code>currencyCode</code></td>\n<td>string</td>\n<td>3-letter ISO 4217 currency code</td>\n</tr>\n<tr>\n<td><code>lineItems</code></td>\n<td>LineItem[]</td>\n<td>List of items included in the transaction. Typically displayed in digital wallet UI.</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>LineItem</td>\n<td>Merchant name, status, and total cost of the transaction. Typically displayed in digital wallet UI.</td>\n</tr>\n</tbody></table>\n<p><strong>Contact Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>familyName</code></td>\n<td>string</td>\n<td>Last name of the contact</td>\n</tr>\n<tr>\n<td><code>givenName</code></td>\n<td>string</td>\n<td>First name of the contact</td>\n</tr>\n<tr>\n<td><code>email</code></td>\n<td>string</td>\n<td>Email address of the contact</td>\n</tr>\n<tr>\n<td><code>country</code></td>\n<td>string</td>\n<td>A 2-letter string containing the ISO 3166-1 country code of the contact address</td>\n</tr>\n<tr>\n<td><code>countryName</code></td>\n<td>string</td>\n<td>The full country name of the contact. Read only.</td>\n</tr>\n<tr>\n<td><code>region</code></td>\n<td>string</td>\n<td>The applicable administrative region (e.g., province, state) of the contact address</td>\n</tr>\n<tr>\n<td><code>city</code></td>\n<td>string</td>\n<td>The city name of the contact address</td>\n</tr>\n<tr>\n<td><code>addressLines</code></td>\n<td>string[]</td>\n<td>The street address lines of the contact address</td>\n</tr>\n<tr>\n<td><code>postalCode</code></td>\n<td>string</td>\n<td>The postal code of the contact address</td>\n</tr>\n<tr>\n<td><code>phone</code></td>\n<td>string</td>\n<td>The telephone number of the contact</td>\n</tr>\n</tbody></table>\n<p><strong>Line Item Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>label</td>\n<td>string</td>\n<td>Human-readable string that explains the purpose of the amount. For a line item, this is typically the name of the charge or object purchased. For the total field, this is typically the merchant name.</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>string</td>\n<td>The cost of the object as a string representation of a float with 2 decimal places. (e.g., &quot;15.00&quot;). For a line item, this is typically the cost of the object, a subtotal, or additional charge (e.g., taxes, shipping). For the total field, this is the total charge of the transaction and should equal the sum of the line item amounts.</td>\n</tr>\n<tr>\n<td>pending</td>\n<td>boolean</td>\n<td>Optional. A boolean indicating whether or not the value in the amount field represents an estimated or unknown cost. Typically, this field is false.</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"createPaymentRequest","type":"undefined | function","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":201,"description":"<div class=\"docs-md\"><p>Text to put inside of the &quot;Charge&quot; button, which is present when\ncredit cards are accepted.</p>\n<p><strong>Default Value</strong>: &quot;Pay with Card&quot;</p></div>","access":"public","tags":[],"name":"creditCardPayButtonText","type":"string","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":208,"description":"<div class=\"docs-md\"><p>Text to put inside of the divider present when digital wallets are enabled.</p>\n<p><strong>Default Value</strong>: &quot;Or&quot;</p></div>","access":"public","tags":[],"name":"digitalWalletsDividerText","type":"string","isStatic":false,"isRequired":false},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":607,"description":"<div class=\"docs-md\"><p>Boolean computed property that checks if the style property is set to &quot;light&quot;.</p></div>","access":"private","tags":[],"decorators":[{"name":"equal"}],"name":"isStyleLight","type":"boolean","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":321,"description":"<div class=\"docs-md\"><p><strong>Required</strong>: callback that gets fired when a nonce is received from the SqPaymentForm JS library.\nYou can then pass this nonce to a your back-end server to make a &quot;charge&quot; request to Square.</p>\n<p><strong>Example</strong>: Sample function to send the nonce to your server.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\">(errors, nonce, cardData, billingContact, shippingContact, shippingOption) =&gt; {\n  <span class=\"hljs-keyword\">if</span> (errors &amp;&amp; errors.length &gt; <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">return</span> alert(<span class=\"hljs-string\">'Error while processing credit card.'</span>);\n  }\n\n  <span class=\"hljs-comment\">// Send nonce to your server</span>\n  fetch(<span class=\"hljs-string\">'https://example.com/charge'</span>, {\n    <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ nonce }),\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>\n  });\n}</code></pre>\n<p><strong>Method Signature</strong></p>\n<p>Example:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">errors, nonce, cardData, billingContact, shippingContact, shippingOption</span>) </span>{\n  <span class=\"hljs-comment\">// Handle callback</span>\n}</code></pre>\n<p>Schema:</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>errors</code></td>\n<td>Error[]</td>\n<td>An array of errors. Empty if nonce request succeeded.</td>\n</tr>\n<tr>\n<td><code>nonce</code></td>\n<td>string</td>\n<td>Nonce to send to back-end server to make charge request</td>\n</tr>\n<tr>\n<td><code>cardData</code></td>\n<td>CardData</td>\n<td>Basic credit card data, such as brand, last 4 digits, etc.</td>\n</tr>\n<tr>\n<td><code>billingContact</code></td>\n<td>Contact</td>\n<td>Digital wallets only. Billing address / info for customer</td>\n</tr>\n<tr>\n<td><code>shippingContact</code></td>\n<td>Contact</td>\n<td>Digital wallets only. Shipping address / info for customer</td>\n</tr>\n<tr>\n<td><code>shippingOption</code></td>\n<td>ShippingOption</td>\n<td>Apple Pay only. Shipping option selected by customer</td>\n</tr>\n</tbody></table>\n<p><strong>Error Object</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>field</code></td>\n<td>string</td>\n<td>An array of errors. Empty if nonce request succeeded.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>string</td>\n<td>Nonce to send to back-end server to make charge request</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>string</td>\n<td>Basic credit card data, such as brand, last 4 digits, etc.</td>\n</tr>\n</tbody></table>\n<p><strong>Error Types</strong></p>\n<table>\n<thead>\n<tr>\n<th>Error Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>INVALID_APPLICATION_ID</code></td>\n<td>The application ID provided when initializing the payment form is invalid</td>\n</tr>\n<tr>\n<td><code>MISSING_APPLICATION_ID</code></td>\n<td>An application ID was not provided when initializing the payment form</td>\n</tr>\n<tr>\n<td><code>MISSING_CARD_DATA</code></td>\n<td>One or more card data fields was not filled out in the payment form</td>\n</tr>\n<tr>\n<td><code>TOO_MANY_REQUESTS</code></td>\n<td>Your application has generated too many nonce generation requests in too short a time</td>\n</tr>\n<tr>\n<td><code>UNAUTHORIZED</code></td>\n<td>Your application is not authorized to use the Connect API to accept online payments</td>\n</tr>\n<tr>\n<td><code>UNSUPPORTED_CARD_BRAND</code></td>\n<td>Card is not supported</td>\n</tr>\n<tr>\n<td><code>UNKNOWN</code></td>\n<td>An unknown error occurred</td>\n</tr>\n<tr>\n<td><code>VALIDATION_ERROR</code></td>\n<td>The provided data is invalid</td>\n</tr>\n</tbody></table>\n<p><strong>Error Fields</strong></p>\n<p>Two errors can be associated with a particular field:</p>\n<ul>\n<li><code>UNSUPPORTED_CARD_BRAND</code> (<code>cardNumber</code>)</li>\n<li><code>VALIDATION_ERROR</code> (<code>cardNumber</code>, <code>cvv</code>, <code>expirationDate</code>, or <code>cvv</code>)</li>\n</ul>\n<p>If the error can be associated with a field, it will be one of these values, as\nlisted above:</p>\n<ul>\n<li><code>cardNumber</code>: Credit card number is not valid</li>\n<li><code>expirationDate</code>: Expiration date is not valid</li>\n<li><code>postalCode</code>: Expiration date is not valid</li>\n<li><code>cvv</code>: CVV is not valid</li>\n</ul>\n<p><strong>Contact Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>familyName</code></td>\n<td>string</td>\n<td>Last name of the contact</td>\n</tr>\n<tr>\n<td><code>givenName</code></td>\n<td>string</td>\n<td>First name of the contact</td>\n</tr>\n<tr>\n<td><code>email</code></td>\n<td>string</td>\n<td>Email address of the contact</td>\n</tr>\n<tr>\n<td><code>country</code></td>\n<td>string</td>\n<td>A 2-letter string containing the ISO 3166-1 country code of the contact address</td>\n</tr>\n<tr>\n<td><code>countryName</code></td>\n<td>string</td>\n<td>The full country name of the contact. Read only.</td>\n</tr>\n<tr>\n<td><code>region</code></td>\n<td>string</td>\n<td>The applicable administrative region (e.g., province, state) of the contact address</td>\n</tr>\n<tr>\n<td><code>city</code></td>\n<td>string</td>\n<td>The city name of the contact address</td>\n</tr>\n<tr>\n<td><code>addressLines</code></td>\n<td>string[]</td>\n<td>The street address lines of the contact address</td>\n</tr>\n<tr>\n<td><code>postalCode</code></td>\n<td>string</td>\n<td>The postal code of the contact address</td>\n</tr>\n<tr>\n<td><code>phone</code></td>\n<td>string</td>\n<td>The telephone number of the contact</td>\n</tr>\n</tbody></table>\n<p><strong>Shipping Option Object (Apple Pay Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>id</td>\n<td>string</td>\n<td>A unique ID to reference this shipping option</td>\n</tr>\n<tr>\n<td>label</td>\n<td>string</td>\n<td>A short title for this shipping option. Shown in the Apple Pay interface</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>string</td>\n<td>The cost of this shipping option as a string representation of a float. The value can be &quot;0.00&quot;</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"onCardNonceResponseReceived","type":"SqPaymentFormCallbackOnCardNonceResponseReceived","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":528,"description":"<div class=\"docs-md\"><p>Callback that gets fired when a customer selects a new shipping address in a Apple Pay.</p>\n<p>Use this callback to validate a the buyer shipping contact. If validation indicates a problem, return\nan error message for the buyer. Update payment request details if a change in shipping address requires it.</p>\n<p>You <strong>must</strong> call <code>done</code> when using this callback.</p>\n<p><strong>Example</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">shippingContact, done</span>) </span>{\n <span class=\"hljs-keyword\">var</span> valid = <span class=\"hljs-literal\">true</span>;\n <span class=\"hljs-keyword\">var</span> shippingErrors = {};\n\n <span class=\"hljs-keyword\">if</span> (!shippingContact.postalCode) {\n   shippingErrors.postalCode = <span class=\"hljs-string\">\"postal code is required\"</span>;\n   valid = <span class=\"hljs-literal\">false</span>;\n }\n <span class=\"hljs-keyword\">if</span> (!shippingContact.addressLines) {\n   shippingErrors.addressLines = <span class=\"hljs-string\">\"address lines are required\"</span>;\n   valid = <span class=\"hljs-literal\">false</span>;\n }\n\n <span class=\"hljs-keyword\">if</span> (!valid) {\n   done({<span class=\"hljs-attr\">shippingContactErrors</span>: shippingErrors});\n   <span class=\"hljs-keyword\">return</span>;\n }\n\n <span class=\"hljs-comment\">// Shipping address unserviceable.</span>\n <span class=\"hljs-keyword\">if</span> (shippingContact.country !== <span class=\"hljs-string\">'US'</span> || shippingContact.country !== <span class=\"hljs-string\">'CA'</span>) {\n   done({<span class=\"hljs-attr\">error</span>: <span class=\"hljs-string\">'Shipping to outside of the U.S. and Canada is not available.'</span>});\n   <span class=\"hljs-keyword\">return</span>;\n }\n\n <span class=\"hljs-comment\">// Update total, lineItems, and shippingOptions for Canadian address.</span>\n <span class=\"hljs-keyword\">if</span> (shippingContact.country === <span class=\"hljs-string\">'CA'</span>) {\n   done({\n     <span class=\"hljs-attr\">total</span>: {\n       <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Total\"</span>,\n       <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"UPDATED AMOUNT\"</span>,\n       <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n     },\n    <span class=\"hljs-comment\">// Note: lineItems REPLACES the set of the line items in the PaymentRequest</span>\n     lineItems: [\n       ...\n\n       {\n         <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Tax\"</span>,\n         <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"UPDATED AMOUNT\"</span>,\n         <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n       }\n     ],\n     <span class=\"hljs-attr\">shippingOptions</span>: [\n       {\n         <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">\"1\"</span>,\n         <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"SHIPPING LABEL\"</span>,\n         <span class=\"hljs-attr\">amount</span>: <span class=\"hljs-string\">\"SHIPPING AMOUNT\"</span>\n       }\n     ]\n   });\n   <span class=\"hljs-keyword\">return</span>;\n }\n\n <span class=\"hljs-comment\">// No changes are necessary.</span>\n done();\n}</code></pre>\n<p><strong>Parameters</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>shippingContact</code></td>\n<td>RedactedShippingContact</td>\n<td>Redacted shipping contact that buyer selected in the Apple Pay payment sheet.</td>\n</tr>\n<tr>\n<td><code>done</code></td>\n<td>function(PaymentDetailsObject)</td>\n<td>Use to update the payment amount after taxes, service fees, or similar charges are recalculated.</td>\n</tr>\n</tbody></table>\n<p><strong>Payment Details Update Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>error</code></td>\n<td>string</td>\n<td>Optional. Use this error if the shipping address is valid but the item cannot be shipped to that address.</td>\n</tr>\n<tr>\n<td><code>shippingContactErrors</code></td>\n<td>ShippingErrors</td>\n<td>Optional. Allows for granular validation errors for addressLine, country, city, region and postal code.</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>LineItem</td>\n<td>Optional. Change the total amount of the transaction</td>\n</tr>\n<tr>\n<td><code>lineItems</code></td>\n<td>LineItem[]</td>\n<td>Optional. To update the line items - most common updates are to add the cost of shipping and the sales tax based on the buyer’s shipping address.</td>\n</tr>\n<tr>\n<td><code>shippingOptions</code></td>\n<td>ShippingOption[]</td>\n<td>Optional. This is updated in response to the customer choosing a new shipping address</td>\n</tr>\n</tbody></table>\n<p><strong>Redacted Shipping Contact Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>country</code></td>\n<td>string</td>\n<td>A 2-letter string containing the ISO 3166-1 country code of the contact address</td>\n</tr>\n<tr>\n<td><code>countryName</code></td>\n<td>string</td>\n<td>The full country name of the contact. Read only.</td>\n</tr>\n<tr>\n<td><code>region</code></td>\n<td>string</td>\n<td>The applicable administrative region (e.g., province, state) of the contact address</td>\n</tr>\n<tr>\n<td><code>city</code></td>\n<td>string</td>\n<td>The city name of the contact address</td>\n</tr>\n<tr>\n<td><code>postalCode</code></td>\n<td>string</td>\n<td>The postal code of the contact address</td>\n</tr>\n</tbody></table>\n<p><strong>Line Item Object (Digital Wallets Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>label</code></td>\n<td>string</td>\n<td>Human-readable string that explains the purpose of the amount. For a line item, this is typically the name of the charge or object purchased. For the total field, this is typically the merchant name.</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>string</td>\n<td>The cost of the object as a string representation of a float with 2 decimal places. (e.g., &quot;15.00&quot;). For a line item, this is typically the cost of the object, a subtotal, or additional charge (e.g., taxes, shipping). For the total field, this is the total charge of the transaction and should equal the sum of the line item amounts.</td>\n</tr>\n<tr>\n<td><code>pending</code></td>\n<td>boolean</td>\n<td>Optional. A boolean indicating whether or not the value in the amount field represents an estimated or unknown cost. Typically, this field is false.</td>\n</tr>\n</tbody></table>\n<p><strong>Shipping Errors Object (Apple Pay Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>label</code></td>\n<td>string</td>\n<td>Human-readable string that explains the purpose of the amount. For a line item, this is typically the name of the charge or object purchased. For the total field, this is typically the merchant name.</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>string</td>\n<td>The cost of the object as a string representation of a float with 2 decimal places. (e.g., &quot;15.00&quot;). For a line item, this is typically the cost of the object, a subtotal, or additional charge (e.g., taxes, shipping). For the total field, this is the total charge of the transaction and should equal the sum of the line item amounts.</td>\n</tr>\n<tr>\n<td><code>pending</code></td>\n<td>boolean</td>\n<td>Optional. A boolean indicating whether or not the value in the amount field represents an estimated or unknown cost. Typically, this field is false.</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"shippingContactChanged","type":"undefined | function","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":596,"description":"<div class=\"docs-md\"><p>Callback that gets fired when a customer selects a new shipping option in Apple Pay.</p>\n<p>You can use this to recalculate and update fields such as taxes or the total cost. You <strong>must</strong> call\n<code>done</code> when using this callback.</p>\n<p><strong>Example</strong></p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">shippingOption, done</span>) </span>{\n  <span class=\"hljs-comment\">// Creates a new array of line items that includes only 1 line</span>\n  <span class=\"hljs-comment\">// item. The item for a shipping option. Production code would get the</span>\n  <span class=\"hljs-comment\">// array of line items from the original PaymentRequest and add/update a line</span>\n  <span class=\"hljs-comment\">// item for the shippingOption argument of this callback.</span>\n  <span class=\"hljs-keyword\">const</span> newLineItems = [{\n    <span class=\"hljs-attr\">label</span>: shippingOption.label,\n    <span class=\"hljs-attr\">amount</span>: shippingOption.amount,\n    <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n  }];\n  <span class=\"hljs-keyword\">const</span> newTotal = {\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Total\"</span>,\n\n    <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">TODO:</span> total amount to be calc'd based on difference between old and new</span>\n    <span class=\"hljs-comment\">// amount of this shippingOption.amount if shippingOption.amount was updated.</span>\n    <span class=\"hljs-comment\">// -- OR --</span>\n    <span class=\"hljs-comment\">// Increase total amount if the line item for this shippingOption is new.</span>\n    amount: <span class=\"hljs-string\">\"SOME_AMOUNT + shippingOption.amount\"</span>,\n    <span class=\"hljs-attr\">pending</span>: <span class=\"hljs-literal\">false</span>\n  };\n\n  done({\n  <span class=\"hljs-comment\">// Note: newLineItems REPLACES the set of the line items in the PaymentRequest</span>\n  <span class=\"hljs-comment\">// newTotal REPLACES the original payment total.</span>\n  lineItems: newLineItems,\n  <span class=\"hljs-attr\">total</span>: newTotal\n};</code></pre>\n<p><strong>Parameters</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>shippingOption</code></td>\n<td>ShippingOption</td>\n<td>The shipping option the buyer selected in the Apple Pay payment sheet.</td>\n</tr>\n<tr>\n<td><code>done</code></td>\n<td>function(PaymentDetailsObject)</td>\n<td>Use to update the payment amount after taxes, service fees, or similar charges are recalculated.</td>\n</tr>\n</tbody></table>\n<p><strong>Shipping Option Object (Apple Pay Only)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>id</td>\n<td>string</td>\n<td>A unique ID to reference this shipping option</td>\n</tr>\n<tr>\n<td>label</td>\n<td>string</td>\n<td>A short title for this shipping option. Shown in the Apple Pay interface</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>string</td>\n<td>The cost of this shipping option as a string representation of a float. The value can be &quot;0.00&quot;</td>\n</tr>\n</tbody></table>\n<p><strong>Payment Details Update Object (Digital Wallets Only)</strong></p>\n<p>Note, this object has a limited selection of fields compared to the <code>shippingContactChanged</code> callback.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>total</code></td>\n<td>LineItem</td>\n<td>Optional. Change the total amount of the transaction</td>\n</tr>\n<tr>\n<td><code>lineItems</code></td>\n<td>LineItem[]</td>\n<td>Optional. To update the line items - most common updates are to add the cost of shipping and the sales tax based on the buyer’s shipping address.</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"shippingOptionChanged","type":"undefined | function","isStatic":false,"isRequired":true},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":218,"description":"<div class=\"docs-md\"><p>What style colors to use for the Payment Form.</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>light</code></td>\n<td>For use on light backgrounds</td>\n</tr>\n<tr>\n<td><code>dark</code></td>\n<td>For use on dark backgrounds</td>\n</tr>\n</tbody></table></div>","access":"public","tags":[],"name":"style","type":"SquarePaymentFormStyledStyles","isStatic":false,"isRequired":false}],"methods":[{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":639,"description":"<div class=\"docs-md\"><p>Runs assertions to make sure that at least one payment method is enabled.</p></div>","access":"private","tags":[],"name":"didReceiveAttrs","isAsync":false,"isGenerator":false,"signatures":[{"params":[{"name":"args","type":"any[]","isOptional":false,"isRest":true}],"typeParams":[],"returns":{"type":"void"}}],"isStatic":false},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":633,"description":"<div class=\"docs-md\"><p>Action that does nothing. Used for null callback values.</p></div>","access":"private","tags":[],"decorators":[{"name":"action"}],"name":"doNothing","isAsync":false,"isGenerator":false,"signatures":[{"params":[],"typeParams":[],"returns":{"type":"void"}}],"isStatic":false}],"accessors":[{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":624,"description":"<div class=\"docs-md\"><p>Checks if the form is to configured to accept any digital wallet payment methods</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"acceptDigitalWallets","type":"boolean","isStatic":false,"hasGetter":true,"hasSetter":false},{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":615,"description":"<div class=\"docs-md\"><p>Determines whether to use the light payment form input styles or dark payment form input styles\nthat get passed directly to the Square Payment Form component.</p></div>","access":"private","tags":[],"decorators":[{"name":"computed"}],"name":"styledFormInputStyles","type":"SqPaymentFormInputStyle[]","isStatic":false,"hasGetter":true,"hasSetter":false}],"arguments":[],"yields":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-square-payment-form/components/square-payment-form-styled","attributes":{"file":"ember-square-payment-form/components/square-payment-form-styled","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-square-payment-form/components/square-payment-form-styled~SquarePaymentFormStyled"}]}}}]}
